{
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "Artifact": {
      "properties": {
        "_created": {
          "description": "Timestamp of creation.",
          "format": "date-time",
          "readOnly": true,
          "title": " created",
          "type": "string"
        },
        "_href": {
          "format": "uri",
          "readOnly": true,
          "title": " href",
          "type": "string"
        },
        "file": {
          "description": "The stored file.",
          "readOnly": true,
          "title": "File",
          "type": "string"
        },
        "md5": {
          "description": "The MD5 checksum of the file if available.",
          "title": "Md5",
          "type": "string"
        },
        "sha1": {
          "description": "The SHA-1 checksum of the file if available.",
          "title": "Sha1",
          "type": "string"
        },
        "sha224": {
          "description": "The SHA-224 checksum of the file if available.",
          "title": "Sha224",
          "type": "string"
        },
        "sha256": {
          "description": "The SHA-256 checksum of the file if available.",
          "title": "Sha256",
          "type": "string"
        },
        "sha384": {
          "description": "The SHA-384 checksum of the file if available.",
          "title": "Sha384",
          "type": "string"
        },
        "sha512": {
          "description": "The SHA-512 checksum of the file if available.",
          "title": "Sha512",
          "type": "string"
        },
        "size": {
          "description": "The size of the file in bytes.",
          "title": "Size",
          "type": "integer"
        },
        "upload": {
          "format": "uri",
          "title": "Upload",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AsyncOperationResponse": {
      "properties": {
        "task": {
          "description": "The href of the task.",
          "format": "uri",
          "title": "Task",
          "type": "string"
        }
      },
      "required": [
        "task"
      ],
      "type": "object"
    },
    "Distribution": {
      "properties": {
        "_created": {
          "description": "Timestamp of creation.",
          "format": "date-time",
          "readOnly": true,
          "title": " created",
          "type": "string"
        },
        "_href": {
          "format": "uri",
          "readOnly": true,
          "title": " href",
          "type": "string"
        },
        "base_path": {
          "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")",
          "maxLength": 255,
          "minLength": 1,
          "title": "Base path",
          "type": "string"
        },
        "base_url": {
          "description": "The URL for accessing the publication as defined by this distribution.",
          "minLength": 1,
          "readOnly": true,
          "title": "Base url",
          "type": "string"
        },
        "content_guard": {
          "description": "An optional content-guard.",
          "format": "uri",
          "title": "Content guard",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "description": "A unique distribution name. Ex, `rawhide` and `stable`.",
          "maxLength": 255,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "publication": {
          "description": "The publication being served as defined by this distribution",
          "format": "uri",
          "title": "Publication",
          "type": "string",
          "x-nullable": true
        },
        "publisher": {
          "description": "Publications created by this publisher and repository are automaticallyserved as defined by this distribution",
          "format": "uri",
          "title": "Publisher",
          "type": "string",
          "x-nullable": true
        },
        "remote": {
          "description": "Remote that can be used to fetch content when using pull-through caching.",
          "format": "uri",
          "title": "Remote",
          "type": "string",
          "x-nullable": true
        },
        "repository": {
          "description": "Publications created by this repository and publisher are automaticallyserved as defined by this distribution",
          "format": "uri",
          "title": "Repository",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "name",
        "base_path"
      ],
      "type": "object"
    },
    "FileContent": {
      "properties": {
        "_artifact": {
          "description": "Artifact file representing the physical content",
          "format": "uri",
          "title": " artifact",
          "type": "string"
        },
        "_created": {
          "description": "Timestamp of creation.",
          "format": "date-time",
          "readOnly": true,
          "title": " created",
          "type": "string"
        },
        "_href": {
          "format": "uri",
          "readOnly": true,
          "title": " href",
          "type": "string"
        },
        "_type": {
          "minLength": 1,
          "readOnly": true,
          "title": " type",
          "type": "string"
        },
        "relative_path": {
          "description": "Relative location of the file within the repository",
          "minLength": 1,
          "title": "Relative path",
          "type": "string"
        }
      },
      "required": [
        "_artifact",
        "relative_path"
      ],
      "type": "object"
    },
    "FilePublisher": {
      "properties": {
        "_created": {
          "description": "Timestamp of creation.",
          "format": "date-time",
          "readOnly": true,
          "title": " created",
          "type": "string"
        },
        "_distributions": {
          "items": {
            "format": "uri",
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "uniqueItems": true
        },
        "_href": {
          "format": "uri",
          "readOnly": true,
          "title": " href",
          "type": "string"
        },
        "_last_updated": {
          "description": "Timestamp of the most recent update of the publisher configuration.",
          "format": "date-time",
          "readOnly": true,
          "title": " last updated",
          "type": "string"
        },
        "_type": {
          "minLength": 1,
          "readOnly": true,
          "title": " type",
          "type": "string"
        },
        "manifest": {
          "default": "PULP_MANIFEST",
          "description": "Name of the file manifest, the full path will be url/manifest",
          "minLength": 1,
          "title": "Manifest",
          "type": "string"
        },
        "name": {
          "description": "A unique name for this publisher.",
          "minLength": 1,
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "FileRemote": {
      "properties": {
        "_created": {
          "description": "Timestamp of creation.",
          "format": "date-time",
          "readOnly": true,
          "title": " created",
          "type": "string"
        },
        "_href": {
          "format": "uri",
          "readOnly": true,
          "title": " href",
          "type": "string"
        },
        "_last_updated": {
          "description": "Timestamp of the most recent update of the remote.",
          "format": "date-time",
          "readOnly": true,
          "title": " last updated",
          "type": "string"
        },
        "_type": {
          "minLength": 1,
          "readOnly": true,
          "title": " type",
          "type": "string"
        },
        "download_concurrency": {
          "description": "Total number of simultaneous connections.",
          "minimum": 1,
          "title": "Download concurrency",
          "type": "integer"
        },
        "name": {
          "description": "A unique name for this remote.",
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "password": {
          "description": "The password to be used for authentication when syncing.",
          "title": "Password",
          "type": "string"
        },
        "policy": {
          "default": "immediate",
          "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'cache_only'. 'immediate' is the default.",
          "enum": [
            "immediate",
            "on_demand",
            "streamed"
          ],
          "title": "Policy",
          "type": "string"
        },
        "proxy_url": {
          "description": "The proxy URL. Format: scheme://user:password@host:port",
          "title": "Proxy url",
          "type": "string"
        },
        "ssl_ca_certificate": {
          "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server.",
          "readOnly": true,
          "title": "Ssl ca certificate",
          "type": "string"
        },
        "ssl_client_certificate": {
          "description": "A PEM encoded client certificate used for authentication.",
          "readOnly": true,
          "title": "Ssl client certificate",
          "type": "string"
        },
        "ssl_client_key": {
          "description": "A PEM encoded private key used for authentication.",
          "readOnly": true,
          "title": "Ssl client key",
          "type": "string"
        },
        "ssl_validation": {
          "description": "If True, SSL peer validation must be performed.",
          "title": "Ssl validation",
          "type": "boolean"
        },
        "url": {
          "description": "The URL of an external content source.",
          "minLength": 1,
          "title": "Url",
          "type": "string"
        },
        "username": {
          "description": "The username to be used for authentication when syncing.",
          "title": "Username",
          "type": "string"
        },
        "validate": {
          "description": "If True, the plugin will validate imported artifacts.",
          "title": "Validate",
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "url"
      ],
      "type": "object"
    },
    "ProgressReport": {
      "properties": {
        "done": {
          "description": "The count of items already processed. Defaults to 0.",
          "readOnly": true,
          "title": "Done",
          "type": "integer"
        },
        "message": {
          "description": "The message shown to the user for the progress report.",
          "minLength": 1,
          "readOnly": true,
          "title": "Message",
          "type": "string"
        },
        "state": {
          "description": "The current state of the progress report. The possible values are: 'waiting', 'skipped', 'running', 'completed', 'failed' and 'canceled'. The default is 'waiting'.",
          "minLength": 1,
          "readOnly": true,
          "title": "State",
          "type": "string"
        },
        "suffix": {
          "description": "The suffix to be shown with the progress report.",
          "readOnly": true,
          "title": "Suffix",
          "type": "string"
        },
        "task": {
          "description": "The task associated with this progress report.",
          "format": "uri",
          "readOnly": true,
          "title": "Task",
          "type": "string"
        },
        "total": {
          "description": "The total count of items to be handled by the ProgressBar.",
          "readOnly": true,
          "title": "Total",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Publication": {
      "properties": {
        "_created": {
          "description": "Timestamp of creation.",
          "format": "date-time",
          "readOnly": true,
          "title": " created",
          "type": "string"
        },
        "_distributions": {
          "description": "This publication is currently being served asdefined by these distributions.",
          "items": {
            "description": "This publication is currently being served asdefined by these distributions.",
            "format": "uri",
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "uniqueItems": true
        },
        "_href": {
          "format": "uri",
          "readOnly": true,
          "title": " href",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher that created this publication.",
          "format": "uri",
          "title": "Publisher",
          "type": "string"
        },
        "repository_version": {
          "format": "uri",
          "readOnly": true,
          "title": "Repository version",
          "type": "string"
        }
      },
      "required": [
        "publisher"
      ],
      "type": "object"
    },
    "Repository": {
      "properties": {
        "_created": {
          "description": "Timestamp of creation.",
          "format": "date-time",
          "readOnly": true,
          "title": " created",
          "type": "string"
        },
        "_href": {
          "format": "uri",
          "readOnly": true,
          "title": " href",
          "type": "string"
        },
        "_latest_version_href": {
          "format": "uri",
          "readOnly": true,
          "title": " latest version href",
          "type": "string"
        },
        "_versions_href": {
          "format": "uri",
          "readOnly": true,
          "title": " versions href",
          "type": "string"
        },
        "description": {
          "description": "An optional description.",
          "title": "Description",
          "type": "string"
        },
        "name": {
          "description": "A unique name for this repository.",
          "minLength": 1,
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "RepositoryPublishURL": {
      "properties": {
        "repository": {
          "description": "A URI of the repository to be synchronized.",
          "format": "uri",
          "title": "Repository",
          "type": "string"
        },
        "repository_version": {
          "description": "A URI of the repository version to be published.",
          "format": "uri",
          "title": "Repository Version",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RepositorySyncURL": {
      "properties": {
        "mirror": {
          "default": false,
          "description": "The synchronization mode, True for \"mirror\" and False for \"additive\" mode.",
          "title": "Mirror",
          "type": "boolean"
        },
        "repository": {
          "description": "A URI of the repository to be synchronized.",
          "format": "uri",
          "title": "Repository",
          "type": "string"
        }
      },
      "required": [
        "repository"
      ],
      "type": "object"
    },
    "RepositoryVersion": {
      "properties": {
        "_created": {
          "description": "Timestamp of creation.",
          "format": "date-time",
          "readOnly": true,
          "title": " created",
          "type": "string"
        },
        "_href": {
          "format": "uri",
          "readOnly": true,
          "title": " href",
          "type": "string"
        },
        "base_version": {
          "description": "A repository version whose content was used as the initial set of content for this repository version",
          "format": "uri",
          "title": "Base version",
          "type": "string"
        },
        "content_summary": {
          "description": "Various count summaries of the content in the version and the HREF to view them.",
          "readOnly": true,
          "title": "Content summary",
          "type": "string"
        },
        "number": {
          "readOnly": true,
          "title": "Number",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "RepositoryVersionCreate": {
      "properties": {
        "add_content_units": {
          "description": "A list of content units to add to a new repository version",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "base_version": {
          "description": "A repository version whose content will be used as the initial set of content for the new repository version",
          "format": "uri",
          "title": "Base version",
          "type": "string"
        },
        "remove_content_units": {
          "description": "A list of content units to remove from the latest repository version",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "add_content_units",
        "remove_content_units"
      ],
      "type": "object"
    },
    "Task": {
      "properties": {
        "_created": {
          "description": "Timestamp of creation.",
          "format": "date-time",
          "readOnly": true,
          "title": " created",
          "type": "string"
        },
        "_href": {
          "format": "uri",
          "readOnly": true,
          "title": " href",
          "type": "string"
        },
        "created_resources": {
          "description": "Resources created by this task.",
          "items": {
            "description": "Resources created by this task.",
            "format": "uri",
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "uniqueItems": true
        },
        "error": {
          "description": "A JSON Object of a fatal error encountered during the execution of this task.",
          "readOnly": true,
          "title": "Error",
          "type": "string"
        },
        "finished_at": {
          "description": "Timestamp of the when this task stopped execution.",
          "format": "date-time",
          "readOnly": true,
          "title": "Finished at",
          "type": "string"
        },
        "name": {
          "description": "The name of task.",
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "non_fatal_errors": {
          "description": "A JSON Object of non-fatal errors encountered during the execution of this task.",
          "readOnly": true,
          "title": "Non fatal errors",
          "type": "string"
        },
        "parent": {
          "description": "The parent task that spawned this task.",
          "format": "uri",
          "readOnly": true,
          "title": "Parent",
          "type": "string"
        },
        "progress_reports": {
          "items": {
            "$ref": "#/definitions/ProgressReport"
          },
          "readOnly": true,
          "type": "array"
        },
        "spawned_tasks": {
          "description": "Any tasks spawned by this task.",
          "items": {
            "description": "Any tasks spawned by this task.",
            "format": "uri",
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "uniqueItems": true
        },
        "started_at": {
          "description": "Timestamp of the when this task started execution.",
          "format": "date-time",
          "readOnly": true,
          "title": "Started at",
          "type": "string"
        },
        "state": {
          "description": "The current state of the task. The possible values include: 'waiting', 'skipped', 'running', 'completed', 'failed' and 'canceled'.",
          "minLength": 1,
          "readOnly": true,
          "title": "State",
          "type": "string"
        },
        "worker": {
          "description": "The worker associated with this task. This field is empty if a worker is not yet assigned.",
          "format": "uri",
          "readOnly": true,
          "title": "Worker",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "Upload": {
      "properties": {
        "_href": {
          "format": "uri",
          "readOnly": true,
          "title": " href",
          "type": "string"
        },
        "expires_at": {
          "readOnly": true,
          "title": "Expires at",
          "type": "string"
        },
        "file": {
          "readOnly": true,
          "title": "File",
          "type": "string"
        },
        "offset": {
          "maximum": 9223372036854775807,
          "minimum": -9223372036854775808,
          "title": "Offset",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Worker": {
      "properties": {
        "_created": {
          "description": "Timestamp of creation.",
          "format": "date-time",
          "readOnly": true,
          "title": " created",
          "type": "string"
        },
        "_href": {
          "format": "uri",
          "readOnly": true,
          "title": " href",
          "type": "string"
        },
        "last_heartbeat": {
          "description": "Timestamp of the last time the worker talked to the service.",
          "format": "date-time",
          "readOnly": true,
          "title": "Last heartbeat",
          "type": "string"
        },
        "missing": {
          "description": "True if the worker is considerd missing, otherwise False",
          "readOnly": true,
          "title": "Missing",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the worker.",
          "minLength": 1,
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "online": {
          "description": "True if the worker is considered online, otherwise False",
          "readOnly": true,
          "title": "Online",
          "type": "boolean"
        }
      },
      "type": "object"
    }
  },
  "host": "192.168.122.138",
  "info": {
    "title": "Pulp3 API",
    "version": "v3"
  },
  "paths": {
    "/pulp/api/v3/artifacts/": {
      "get": {
        "description": "",
        "operationId": "artifacts_list",
        "parameters": [
          {
            "description": "Filter results where md5 matches value",
            "in": "query",
            "name": "md5",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where sha1 matches value",
            "in": "query",
            "name": "sha1",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where sha224 matches value",
            "in": "query",
            "name": "sha224",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where sha256 matches value",
            "in": "query",
            "name": "sha256",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where sha384 matches value",
            "in": "query",
            "name": "sha384",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where sha512 matches value",
            "in": "query",
            "name": "sha512",
            "required": false,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Artifact"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "artifacts_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      }
    },
    "/pulp/api/v3/content/file/files/": {
      "get": {
        "description": "ViewSet for FileContent.",
        "operationId": "content_file_files_list",
        "parameters": [
          {
            "description": "Filter results where relative_path matches value",
            "in": "query",
            "name": "relative_path",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where digest matches value",
            "in": "query",
            "name": "digest",
            "required": false,
            "type": "string"
          },
          {
            "description": "Repository Version referenced by HREF",
            "in": "query",
            "name": "repository_version",
            "required": false,
            "type": "string"
          },
          {
            "description": "Repository Version referenced by HREF",
            "in": "query",
            "name": "repository_version_added",
            "required": false,
            "type": "string"
          },
          {
            "description": "Repository Version referenced by HREF",
            "in": "query",
            "name": "repository_version_removed",
            "required": false,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/FileContent"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [],
      "post": {
        "description": "ViewSet for FileContent.",
        "operationId": "content_file_files_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileContent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileContent"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      }
    },
    "/pulp/api/v3/distributions/": {
      "get": {
        "description": "Provides read and list methods and also provides asynchronous CUD methods to dispatch tasks\nwith reservation that lock all Distributions preventing race conditions during base_path\nchecking.",
        "operationId": "distributions_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where name is in a comma-separated list of values",
            "in": "query",
            "name": "name__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "base_path",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where base_path contains value",
            "in": "query",
            "name": "base_path__contains",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where base_path contains value",
            "in": "query",
            "name": "base_path__icontains",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where base_path is in a comma-separated list of values",
            "in": "query",
            "name": "base_path__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Distribution"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [],
      "post": {
        "description": "Trigger an asynchronous create task",
        "operationId": "distributions_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Distribution"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      }
    },
    "/pulp/api/v3/orphans/": {
      "delete": {
        "description": "Cleans up all the Content and Artifact orphans in the system",
        "operationId": "orphans_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": []
    },
    "/pulp/api/v3/publications/": {
      "get": {
        "description": "",
        "operationId": "publications_list",
        "parameters": [
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Publication"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": []
    },
    "/pulp/api/v3/publishers/file/file/": {
      "get": {
        "description": "ViewSet for File Publishers.",
        "operationId": "publishers_file_file_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where name is in a comma-separated list of values",
            "in": "query",
            "name": "name__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where _last_updated is less than value",
            "in": "query",
            "name": "_last_updated__lt",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where _last_updated is less than or equal to value",
            "in": "query",
            "name": "_last_updated__lte",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where _last_updated is greater than value",
            "in": "query",
            "name": "_last_updated__gt",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where _last_updated is greater than or equal to value",
            "in": "query",
            "name": "_last_updated__gte",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where _last_updated is between two comma separated values",
            "in": "query",
            "name": "_last_updated__range",
            "required": false,
            "type": "string"
          },
          {
            "description": "ISO 8601 formatted dates are supported",
            "in": "query",
            "name": "_last_updated",
            "required": false,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/FilePublisher"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [],
      "post": {
        "description": "ViewSet for File Publishers.",
        "operationId": "publishers_file_file_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilePublisher"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FilePublisher"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      }
    },
    "/pulp/api/v3/remotes/file/file/": {
      "get": {
        "description": "ViewSet for File Remotes.",
        "operationId": "remotes_file_file_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where name is in a comma-separated list of values",
            "in": "query",
            "name": "name__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where _last_updated is less than value",
            "in": "query",
            "name": "_last_updated__lt",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where _last_updated is less than or equal to value",
            "in": "query",
            "name": "_last_updated__lte",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where _last_updated is greater than value",
            "in": "query",
            "name": "_last_updated__gt",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where _last_updated is greater than or equal to value",
            "in": "query",
            "name": "_last_updated__gte",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where _last_updated is between two comma separated values",
            "in": "query",
            "name": "_last_updated__range",
            "required": false,
            "type": "string"
          },
          {
            "description": "ISO 8601 formatted dates are supported",
            "in": "query",
            "name": "_last_updated",
            "required": false,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/FileRemote"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [],
      "post": {
        "description": "ViewSet for File Remotes.",
        "operationId": "remotes_file_file_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileRemote"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileRemote"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      }
    },
    "/pulp/api/v3/repositories/": {
      "get": {
        "description": "",
        "operationId": "repositories_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where name is in a comma-separated list of values",
            "in": "query",
            "name": "name__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Repository"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "repositories_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Repository"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Repository"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      }
    },
    "/pulp/api/v3/status/": {
      "get": {
        "description": "Returns app information including the version of pulpcore and loaded pulp plugins,\nknown workers, database connection status, and messaging connection status",
        "operationId": "status_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": []
    },
    "/pulp/api/v3/tasks/": {
      "get": {
        "description": "",
        "operationId": "tasks_list",
        "parameters": [
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "state",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where state is in a comma-separated list of values",
            "in": "query",
            "name": "state__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "Foreign Key referenced by HREF",
            "in": "query",
            "name": "worker",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where worker is in a comma-separated list of values",
            "in": "query",
            "name": "worker__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where name contains value",
            "in": "query",
            "name": "name__contains",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where started_at is less than value",
            "in": "query",
            "name": "started_at__lt",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where started_at is less than or equal to value",
            "in": "query",
            "name": "started_at__lte",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where started_at is greater than value",
            "in": "query",
            "name": "started_at__gt",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where started_at is greater than or equal to value",
            "in": "query",
            "name": "started_at__gte",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where started_at is between two comma separated values",
            "in": "query",
            "name": "started_at__range",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where finished_at is less than value",
            "in": "query",
            "name": "finished_at__lt",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where finished_at is less than or equal to value",
            "in": "query",
            "name": "finished_at__lte",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where finished_at is greater than value",
            "in": "query",
            "name": "finished_at__gt",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where finished_at is greater than or equal to value",
            "in": "query",
            "name": "finished_at__gte",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where finished_at is between two comma separated values",
            "in": "query",
            "name": "finished_at__range",
            "required": false,
            "type": "string"
          },
          {
            "description": "Foreign Key referenced by HREF",
            "in": "query",
            "name": "parent",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "ISO 8601 formatted dates are supported",
            "in": "query",
            "name": "started_at",
            "required": false,
            "type": "string"
          },
          {
            "description": "ISO 8601 formatted dates are supported",
            "in": "query",
            "name": "finished_at",
            "required": false,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Task"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": []
    },
    "/pulp/api/v3/uploads/": {
      "get": {
        "description": "Handle GET requests.",
        "operationId": "uploads_read",
        "parameters": [
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Upload"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [],
      "post": {
        "description": "Handle POST requests.",
        "operationId": "uploads_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Upload"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Upload"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "put": {
        "description": "Handle PUT requests.",
        "operationId": "uploads_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Upload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Upload"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      }
    },
    "/pulp/api/v3/workers/": {
      "get": {
        "description": "",
        "operationId": "workers_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where name is in a comma-separated list of values",
            "in": "query",
            "name": "name__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where last_heartbeat is less than value",
            "in": "query",
            "name": "last_heartbeat__lt",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where last_heartbeat is less than or equal to value",
            "in": "query",
            "name": "last_heartbeat__lte",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where last_heartbeat is greater than value",
            "in": "query",
            "name": "last_heartbeat__gt",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where last_heartbeat is greater than or equal to value",
            "in": "query",
            "name": "last_heartbeat__gte",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where last_heartbeat is between two comma separated values",
            "in": "query",
            "name": "last_heartbeat__range",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "online",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "missing",
            "required": false,
            "type": "string"
          },
          {
            "description": "ISO 8601 formatted dates are supported",
            "in": "query",
            "name": "last_heartbeat",
            "required": false,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Worker"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": []
    },
    "{artifact_href}": {
      "delete": {
        "description": "Remove Artifact only if it is not associated with any Content.",
        "operationId": "artifacts_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "get": {
        "description": "",
        "operationId": "artifacts_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [
        {
          "description": "URI of Artifact. e.g.: /pulp/api/v3/artifacts/1/",
          "in": "path",
          "name": "artifact_href",
          "required": true,
          "type": "string"
        }
      ]
    },
    "{distribution_href}": {
      "delete": {
        "description": "Provides read and list methods and also provides asynchronous CUD methods to dispatch tasks\nwith reservation that lock all Distributions preventing race conditions during base_path\nchecking.",
        "operationId": "distributions_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "get": {
        "description": "Provides read and list methods and also provides asynchronous CUD methods to dispatch tasks\nwith reservation that lock all Distributions preventing race conditions during base_path\nchecking.",
        "operationId": "distributions_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Distribution"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [
        {
          "description": "URI of Distribution. e.g.: /pulp/api/v3/distributions/1/",
          "in": "path",
          "name": "distribution_href",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "description": "Trigger an asynchronous partial update task",
        "operationId": "distributions_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Distribution"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "put": {
        "description": "Trigger an asynchronous update task",
        "operationId": "distributions_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Distribution"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      }
    },
    "{file_content_href}": {
      "get": {
        "description": "ViewSet for FileContent.",
        "operationId": "content_file_files_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileContent"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [
        {
          "description": "URI of File Content. e.g.: /pulp/api/v3/content/file/files/1/",
          "in": "path",
          "name": "file_content_href",
          "required": true,
          "type": "string"
        }
      ]
    },
    "{file_publisher_href}": {
      "delete": {
        "description": "Trigger an asynchronous delete task",
        "operationId": "publishers_file_file_delete",
        "parameters": [],
        "responses": {
          "202": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "get": {
        "description": "ViewSet for File Publishers.",
        "operationId": "publishers_file_file_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FilePublisher"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [
        {
          "description": "URI of File Publisher. e.g.: /pulp/api/v3/publishers/file/file/1/",
          "in": "path",
          "name": "file_publisher_href",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "description": "Trigger an asynchronous partial update task",
        "operationId": "publishers_file_file_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilePublisher"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "put": {
        "description": "Trigger an asynchronous update task",
        "operationId": "publishers_file_file_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilePublisher"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      }
    },
    "{file_publisher_href}publish/": {
      "parameters": [
        {
          "description": "URI of File Publisher. e.g.: /pulp/api/v3/publishers/file/file/1/",
          "in": "path",
          "name": "file_publisher_href",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "Trigger an asynchronous task to publish file content.",
        "operationId": "publishers_file_file_publish",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RepositoryPublishURL"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      }
    },
    "{file_remote_href}": {
      "delete": {
        "description": "Trigger an asynchronous delete task",
        "operationId": "remotes_file_file_delete",
        "parameters": [],
        "responses": {
          "202": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "get": {
        "description": "ViewSet for File Remotes.",
        "operationId": "remotes_file_file_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileRemote"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [
        {
          "description": "URI of File Remote. e.g.: /pulp/api/v3/remotes/file/file/1/",
          "in": "path",
          "name": "file_remote_href",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "description": "Trigger an asynchronous partial update task",
        "operationId": "remotes_file_file_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileRemote"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "put": {
        "description": "Trigger an asynchronous update task",
        "operationId": "remotes_file_file_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileRemote"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      }
    },
    "{file_remote_href}sync/": {
      "parameters": [
        {
          "description": "URI of File Remote. e.g.: /pulp/api/v3/remotes/file/file/1/",
          "in": "path",
          "name": "file_remote_href",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "Trigger an asynchronous task to sync file content.",
        "operationId": "remotes_file_file_sync",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RepositorySyncURL"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      }
    },
    "{publication_href}": {
      "delete": {
        "description": "",
        "operationId": "publications_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "get": {
        "description": "",
        "operationId": "publications_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Publication"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [
        {
          "description": "URI of Publication. e.g.: /pulp/api/v3/publications/1/",
          "in": "path",
          "name": "publication_href",
          "required": true,
          "type": "string"
        }
      ]
    },
    "{repository_href}": {
      "delete": {
        "description": "Trigger an asynchronous task to delete a repository.",
        "operationId": "repositories_delete",
        "parameters": [],
        "responses": {
          "202": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "get": {
        "description": "",
        "operationId": "repositories_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Repository"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [
        {
          "description": "URI of Repository. e.g.: /pulp/api/v3/repositories/1/",
          "in": "path",
          "name": "repository_href",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "description": "",
        "operationId": "repositories_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Repository"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Repository"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "put": {
        "description": "Trigger an asynchronous task to updatea repository.",
        "operationId": "repositories_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Repository"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      }
    },
    "{repository_href}versions/": {
      "get": {
        "description": "",
        "operationId": "repositories_versions_list",
        "parameters": [
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "number",
            "required": false,
            "type": "number"
          },
          {
            "description": "Filter results where number is less than value",
            "in": "query",
            "name": "number__lt",
            "required": false,
            "type": "number"
          },
          {
            "description": "Filter results where number is less than or equal to value",
            "in": "query",
            "name": "number__lte",
            "required": false,
            "type": "number"
          },
          {
            "description": "Filter results where number is greater than value",
            "in": "query",
            "name": "number__gt",
            "required": false,
            "type": "number"
          },
          {
            "description": "Filter results where number is greater than or equal to value",
            "in": "query",
            "name": "number__gte",
            "required": false,
            "type": "number"
          },
          {
            "description": "Filter results where number is between two comma separated values",
            "in": "query",
            "name": "number__range",
            "required": false,
            "type": "number"
          },
          {
            "description": "Filter results where _created is less than value",
            "in": "query",
            "name": "_created__lt",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where _created is less than or equal to value",
            "in": "query",
            "name": "_created__lte",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where _created is greater than value",
            "in": "query",
            "name": "_created__gt",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where _created is greater than or equal to value",
            "in": "query",
            "name": "_created__gte",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results where _created is between two comma separated values",
            "in": "query",
            "name": "_created__range",
            "required": false,
            "type": "string"
          },
          {
            "description": "Content Unit referenced by HREF",
            "in": "query",
            "name": "content",
            "required": false,
            "type": "string"
          },
          {
            "description": "ISO 8601 formatted dates are supported",
            "in": "query",
            "name": "_created",
            "required": false,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/RepositoryVersion"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [
        {
          "description": "URI of Repository. e.g.: /pulp/api/v3/repositories/1/",
          "in": "path",
          "name": "repository_href",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "Trigger an asynchronous task to create a new repository version.",
        "operationId": "repositories_versions_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RepositoryVersionCreate"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      }
    },
    "{repository_version_href}": {
      "delete": {
        "description": "Trigger an asynchronous task to delete a repositroy version.",
        "operationId": "repositories_versions_delete",
        "parameters": [],
        "responses": {
          "202": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AsyncOperationResponse"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "get": {
        "description": "",
        "operationId": "repositories_versions_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RepositoryVersion"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [
        {
          "description": "URI of Repository Version. e.g.: /pulp/api/v3/repositories/1/versions/1/",
          "in": "path",
          "name": "repository_version_href",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "description": "",
        "operationId": "repositories_versions_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RepositoryVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RepositoryVersion"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "put": {
        "description": "",
        "operationId": "repositories_versions_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RepositoryVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RepositoryVersion"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      }
    },
    "{task_href}": {
      "delete": {
        "description": "",
        "operationId": "tasks_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "get": {
        "description": "",
        "operationId": "tasks_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [
        {
          "description": "URI of Task. e.g.: /pulp/api/v3/tasks/1/",
          "in": "path",
          "name": "task_href",
          "required": true,
          "type": "string"
        }
      ]
    },
    "{task_href}cancel/": {
      "parameters": [
        {
          "description": "URI of Task. e.g.: /pulp/api/v3/tasks/1/",
          "in": "path",
          "name": "task_href",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "",
        "operationId": "tasks_cancel",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      }
    },
    "{upload_href}": {
      "get": {
        "description": "Handle GET requests.",
        "operationId": "uploads_read",
        "parameters": [
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Upload"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [
        {
          "description": "URI of Upload. e.g.: /pulp/api/v3/uploads/1/",
          "in": "path",
          "name": "upload_href",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "Handle POST requests.",
        "operationId": "uploads_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Upload"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Upload"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "put": {
        "description": "Handle PUT requests.",
        "operationId": "uploads_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Upload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Upload"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      }
    },
    "{worker_href}": {
      "get": {
        "description": "",
        "operationId": "workers_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Worker"
            }
          }
        },
        "tags": [
          "pulp"
        ]
      },
      "parameters": [
        {
          "description": "URI of Worker. e.g.: /pulp/api/v3/workers/1/",
          "in": "path",
          "name": "worker_href",
          "required": true,
          "type": "string"
        }
      ]
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "security": [
    {
      "Basic": []
    }
  ],
  "securityDefinitions": {
    "Basic": {
      "type": "basic"
    }
  },
  "swagger": "2.0"
}